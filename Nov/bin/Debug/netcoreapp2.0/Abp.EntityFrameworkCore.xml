<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Abp.EntityFrameworkCore</name>
    </assembly>
    <members>
        <member name="T:Abp.EntityFrameworkCore.AbpDbContext">
            <summary>
            Base class for all DbContext classes in the application.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.AbpSession">
            <summary>
            Used to get current session values.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.EntityChangeEventHelper">
            <summary>
            Used to trigger entity change events.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.Logger">
            <summary>
            Reference to the logger.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.EventBus">
            <summary>
            Reference to the event bus.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.GuidGenerator">
            <summary>
            Reference to GUID generator.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.CurrentUnitOfWorkProvider">
            <summary>
            Reference to the current UOW provider.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.MultiTenancyConfig">
            <summary>
            Reference to multi tenancy configuration.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.AbpDbContext.SuppressAutoSetTenantId">
            <summary>
            Can be used to suppress automatically setting TenantId on SaveChanges.
            Default: false.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.AbpDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule">
            <summary>
            This module is used to implement "Data Access Layer" in EntityFramework.
            </summary>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Configuration.AbpEfCoreConfigurationExtensions">
            <summary>
            Defines extension methods to <see cref="T:Abp.Configuration.Startup.IModuleConfigurations"/> to allow to configure ABP EntityFramework Core module.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Configuration.AbpEfCoreConfigurationExtensions.AbpEfCore(Abp.Configuration.Startup.IModuleConfigurations)">
            <summary>
            Used to configure ABP EntityFramework Core module.
            </summary>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Extensions.QueryableExtensions">
            <summary>
            Extension methods for <see cref="T:System.Linq.IQueryable"/> and <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Extensions.QueryableExtensions.IncludeIf``2(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Specifies the related objects to include in the query results.
            </summary>
            <param name="source">The source <see cref="T:System.Linq.IQueryable`1"/> on which to call Include.</param>
            <param name="condition">A boolean value to determine to include <paramref name="path"/> or not.</param>
            <param name="path">The type of navigation property being included.</param>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3">
            <summary>
            Implements IRepository for Entity Framework.
            </summary>
            <typeparam name="TDbContext">DbContext which contains <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TEntity">Type of the Entity for this repository</typeparam>
            <typeparam name="TPrimaryKey">Primary key of the entity</typeparam>
        </member>
        <member name="P:Abp.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.Context">
            <summary>
            Gets EF DbContext object.
            </summary>
        </member>
        <member name="P:Abp.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.Table">
            <summary>
            Gets DbSet for given entity.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.#ctor(Abp.EntityFrameworkCore.IDbContextProvider{`0})">
            <summary>
            Constructor
            </summary>
            <param name="dbContextProvider"></param>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Uow.EfCoreUnitOfWork">
            <summary>
            Implements Unit of work for Entity Framework.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Uow.EfCoreUnitOfWork.#ctor(Abp.Dependency.IIocResolver,Abp.Domain.Uow.IConnectionStringResolver,Abp.Domain.Uow.IUnitOfWorkFilterExecuter,Abp.EntityFrameworkCore.IDbContextResolver,Abp.Domain.Uow.IUnitOfWorkDefaultOptions,Abp.EntityFramework.IDbContextTypeMatcher,Abp.EntityFrameworkCore.Uow.IEfCoreTransactionStrategy)">
            <summary>
            Creates a new <see cref="T:Abp.EntityFrameworkCore.Uow.EfCoreUnitOfWork"/>.
            </summary>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1">
            <summary>
            Implements <see cref="T:Abp.EntityFrameworkCore.IDbContextProvider`1"/> that gets DbContext from
            active unit of work.
            </summary>
            <typeparam name="TDbContext">Type of the DbContext</typeparam>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1.#ctor(Abp.Domain.Uow.ICurrentUnitOfWorkProvider)">
            <summary>
            Creates a new <see cref="T:Abp.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1"/>.
            </summary>
            <param name="currentUnitOfWorkProvider"></param>
        </member>
        <member name="T:Abp.EntityFrameworkCore.Uow.UnitOfWorkExtensions">
            <summary>
            Extension methods for UnitOfWork.
            </summary>
        </member>
        <member name="M:Abp.EntityFrameworkCore.Uow.UnitOfWorkExtensions.GetDbContext``1(Abp.Domain.Uow.IActiveUnitOfWork)">
            <summary>
            Gets a DbContext as a part of active unit of work.
            This method can be called when current unit of work is an <see cref="T:Abp.EntityFrameworkCore.Uow.EfCoreUnitOfWork"/>.
            </summary>
            <typeparam name="TDbContext">Type of the DbContext</typeparam>
            <param name="unitOfWork">Current (active) unit of work</param>
        </member>
        <member name="F:Abp.EntityFrameworkCore.Utils.DateTimePropertyInfoHelper.DateTimeProperties">
            <summary>
            Key: Entity type
            Value: DateTime property infos
            </summary>
        </member>
    </members>
</doc>
